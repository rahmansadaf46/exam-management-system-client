[{"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\index.js":"1","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\reportWebVitals.js":"2","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\App.js":"3","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Home\\Home\\Home.js":"4","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\EnrollStudent\\EnrollStudent.js":"5","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\StudentByDepartment\\StudentByDepartment.js":"6","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\PrivateRoute.js":"7","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\Login.js":"8","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\MakeAdmin\\MakeAdmin.js":"9","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\StudentsInfo\\StudentsInfo.js":"10","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Department\\Department\\Department.js":"11","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\NotAccess\\NoMatch\\NoMatch.js":"12","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\StudentProfile\\StudentProfile.js":"13","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\AddDepartment\\AddDepartment.js":"14","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\firebase.config.js":"15","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\SignUpForm.js":"16","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\LoginForm.js":"17","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\Header\\Header.js":"18","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Home\\Navbar\\Navbar.js":"19","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\NotAccess\\Unauthorized\\Unauthorized.js":"20","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\AllStudentsData\\AllStudentsData.js":"21","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Department\\DepartmentCard\\DepartmentCard.js":"22","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Home\\HeaderMain\\HeaderMain.js":"23","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\Sidebar\\Sidebar.js":"24","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\UpdateStudent\\UpdateStudent.js":"25","D:\\Study\\varsity project\\Exam management system\\client\\src\\index.js":"26","D:\\Study\\varsity project\\Exam management system\\client\\src\\reportWebVitals.js":"27","D:\\Study\\varsity project\\Exam management system\\client\\src\\App.js":"28","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\PrivateRoute.js":"29","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\StudentsInfo\\StudentsInfo.js":"30","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\EnrollStudent\\EnrollStudent.js":"31","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\StudentByDepartment\\StudentByDepartment.js":"32","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\NotAccess\\NoMatch\\NoMatch.js":"33","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\Login.js":"34","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Home\\Home\\Home.js":"35","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\MakeAdmin\\MakeAdmin.js":"36","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\StudentProfile\\StudentProfile.js":"37","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AddDepartment\\AddDepartment.js":"38","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Department\\Department\\Department.js":"39","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\firebase.config.js":"40","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\SignUpForm.js":"41","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\LoginForm.js":"42","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AllStudentsData\\AllStudentsData.js":"43","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\NotAccess\\Unauthorized\\Unauthorized.js":"44","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\Sidebar\\Sidebar.js":"45","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\Header\\Header.js":"46","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Home\\HeaderMain\\HeaderMain.js":"47","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Home\\Navbar\\Navbar.js":"48","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Department\\DepartmentCard\\DepartmentCard.js":"49","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\UpdateStudent\\UpdateStudent.js":"50","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AddSession\\AddSession.js":"51","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AddTeacher\\AddTeacher.js":"52","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AddSemester\\AddSemester.js":"53","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\TeacherList\\TeacherList.js":"54","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Semester\\Semester.js":"55","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\SemesterDashboard\\SemesterDashboard.js":"56","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\TeacherSidebar\\TeacherSidebar.js":"57","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\TeacherHeader\\TeacherHeader.js":"58","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\CreateExam.js":"59","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\Practice\\Practice.js":"60","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\McqCategory.js":"61","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\FillInTheBlanks.js":"62","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\WrittenExam.js":"63","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\QuestionList\\QuestionList.js":"64","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\QuestionProfile\\QuestionProfile.js":"65","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AllSemester\\AllSemester.js":"66","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\SemesterDetails\\SemesterDetails.js":"67","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\UpdateSemester\\UpdateSemester.js":"68","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\DepartmentList\\DepartmentList.js":"69","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AdminList\\AdminList.js":"70","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\UpdateQuestionDetails\\UpdateQuestionDetails.js":"71","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\TeacherProfile\\TeacherProfile.js":"72","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\UpdateTeacher\\UpdateTeacher.js":"73","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\StudentDashboard\\StudentDashboard.js":"74","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\StudentHeader\\StudentHeader.js":"75","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\StudentSidebar\\StudentSidebar.js":"76","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\Exam\\Exam.js":"77","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\ExamPage\\ExamPage.js":"78","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\UpdateQuestion.js":"79"},{"size":500,"mtime":499162500000,"results":"80","hashOfConfig":"81"},{"size":362,"mtime":499162500000,"results":"82","hashOfConfig":"81"},{"size":2395,"mtime":1612475343237,"results":"83","hashOfConfig":"81"},{"size":411,"mtime":1611952092262,"results":"84","hashOfConfig":"81"},{"size":11630,"mtime":1613766206515,"results":"85","hashOfConfig":"81"},{"size":4441,"mtime":1612644826168,"results":"86","hashOfConfig":"81"},{"size":782,"mtime":1610733638708,"results":"87","hashOfConfig":"81"},{"size":10145,"mtime":1612096952579,"results":"88","hashOfConfig":"81"},{"size":3412,"mtime":1611952742507,"results":"89","hashOfConfig":"81"},{"size":4435,"mtime":1613764614401,"results":"90","hashOfConfig":"81"},{"size":3388,"mtime":1613217127402,"results":"91","hashOfConfig":"81"},{"size":2307,"mtime":1611520828725,"results":"92","hashOfConfig":"81"},{"size":5513,"mtime":1613220155139,"results":"93","hashOfConfig":"81"},{"size":4239,"mtime":1611952693526,"results":"94","hashOfConfig":"81"},{"size":394,"mtime":1612113535994,"results":"95","hashOfConfig":"81"},{"size":2525,"mtime":1611953296456,"results":"96","hashOfConfig":"81"},{"size":1997,"mtime":1613591451805,"results":"97","hashOfConfig":"81"},{"size":1816,"mtime":1611926898088,"results":"98","hashOfConfig":"81"},{"size":3812,"mtime":1613770217076,"results":"99","hashOfConfig":"81"},{"size":1762,"mtime":1613605952055,"results":"100","hashOfConfig":"81"},{"size":2530,"mtime":1612475366779,"results":"101","hashOfConfig":"81"},{"size":540,"mtime":1612471334283,"results":"102","hashOfConfig":"81"},{"size":1655,"mtime":1613608358966,"results":"103","hashOfConfig":"81"},{"size":3945,"mtime":1611955762279,"results":"104","hashOfConfig":"81"},{"size":6175,"mtime":1613769094357,"results":"105","hashOfConfig":"81"},{"size":563,"mtime":1659378482054,"results":"106","hashOfConfig":"107"},{"size":375,"mtime":1652338555399,"results":"108","hashOfConfig":"107"},{"size":6206,"mtime":1662371833874,"results":"109","hashOfConfig":"107"},{"size":769,"mtime":1652424710592,"results":"110","hashOfConfig":"107"},{"size":5191,"mtime":1660073849423,"results":"111","hashOfConfig":"107"},{"size":12636,"mtime":1660073178750,"results":"112","hashOfConfig":"107"},{"size":4427,"mtime":1652446405899,"results":"113","hashOfConfig":"107"},{"size":2307,"mtime":1652338555306,"results":"114","hashOfConfig":"107"},{"size":13784,"mtime":1660034773159,"results":"115","hashOfConfig":"107"},{"size":402,"mtime":1654153589507,"results":"116","hashOfConfig":"107"},{"size":3387,"mtime":1660034598590,"results":"117","hashOfConfig":"107"},{"size":5471,"mtime":1662371499057,"results":"118","hashOfConfig":"107"},{"size":4345,"mtime":1660034598567,"results":"119","hashOfConfig":"107"},{"size":3713,"mtime":1662371474420,"results":"120","hashOfConfig":"107"},{"size":396,"mtime":1652375275777,"results":"121","hashOfConfig":"107"},{"size":2525,"mtime":1652338555302,"results":"122","hashOfConfig":"107"},{"size":1997,"mtime":1652338555300,"results":"123","hashOfConfig":"107"},{"size":2531,"mtime":1660034598575,"results":"124","hashOfConfig":"107"},{"size":1727,"mtime":1662371361456,"results":"125","hashOfConfig":"107"},{"size":6140,"mtime":1655922849075,"results":"126","hashOfConfig":"107"},{"size":1780,"mtime":1660039393233,"results":"127","hashOfConfig":"107"},{"size":8190,"mtime":1662371469578,"results":"128","hashOfConfig":"107"},{"size":3225,"mtime":1662371457114,"results":"129","hashOfConfig":"107"},{"size":736,"mtime":1653324409054,"results":"130","hashOfConfig":"107"},{"size":8688,"mtime":1662371484120,"results":"131","hashOfConfig":"107"},{"size":6787,"mtime":1659378766187,"results":"132","hashOfConfig":"107"},{"size":12352,"mtime":1659378772636,"results":"133","hashOfConfig":"107"},{"size":12816,"mtime":1659378753512,"results":"134","hashOfConfig":"107"},{"size":9193,"mtime":1660034598602,"results":"135","hashOfConfig":"107"},{"size":4280,"mtime":1662371349039,"results":"136","hashOfConfig":"107"},{"size":4506,"mtime":1653421131194,"results":"137","hashOfConfig":"107"},{"size":5052,"mtime":1662372074994,"results":"138","hashOfConfig":"107"},{"size":1967,"mtime":1660039431074,"results":"139","hashOfConfig":"107"},{"size":42886,"mtime":1662374385250,"results":"140","hashOfConfig":"107"},{"size":1437,"mtime":1655656531196,"results":"141","hashOfConfig":"107"},{"size":4468,"mtime":1659378840904,"results":"142","hashOfConfig":"107"},{"size":2577,"mtime":1658862639072,"results":"143","hashOfConfig":"107"},{"size":1968,"mtime":1658863447486,"results":"144","hashOfConfig":"107"},{"size":5308,"mtime":1659123596372,"results":"145","hashOfConfig":"107"},{"size":13322,"mtime":1662371313139,"results":"146","hashOfConfig":"107"},{"size":6024,"mtime":1659038992602,"results":"147","hashOfConfig":"107"},{"size":10500,"mtime":1662371503313,"results":"148","hashOfConfig":"107"},{"size":12421,"mtime":1662371490821,"results":"149","hashOfConfig":"107"},{"size":7354,"mtime":1660034598579,"results":"150","hashOfConfig":"107"},{"size":8704,"mtime":1660034598572,"results":"151","hashOfConfig":"107"},{"size":6681,"mtime":1656484895602,"results":"152","hashOfConfig":"153"},{"size":7650,"mtime":1662371494954,"results":"154","hashOfConfig":"107"},{"size":6942,"mtime":1662371479117,"results":"155","hashOfConfig":"107"},{"size":4574,"mtime":1656625276245,"results":"156","hashOfConfig":"107"},{"size":1967,"mtime":1660039418379,"results":"157","hashOfConfig":"107"},{"size":2323,"mtime":1659042098304,"results":"158","hashOfConfig":"107"},{"size":7382,"mtime":1659042416357,"results":"159","hashOfConfig":"107"},{"size":29578,"mtime":1662536670221,"results":"160","hashOfConfig":"107"},{"size":44107,"mtime":1662375244672,"results":"161","hashOfConfig":"107"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"d1j04g",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"164"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"164"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"164"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"164"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"164"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"164"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},"1ay13q5",{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uc51fc",{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\index.js",[],["330","331"],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\reportWebVitals.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\App.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Home\\Home\\Home.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\EnrollStudent\\EnrollStudent.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\StudentByDepartment\\StudentByDepartment.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\PrivateRoute.js",["332"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                loggedInUser.email ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\Login.js",["333"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { UserContext } from '../../App';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport LoginForm from './LoginForm';\r\nimport SignUpForm from './SignUpForm';\r\nimport \"./Login.css\";\r\nimport logo from \"../../images/ICON/istName.PNG\"\r\n\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst Login = () => {\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const setData = (data) => {\r\n        localStorage.setItem('user', JSON.stringify(data));\r\n    }\r\n    useEffect(() => {\r\n        setLoggedInUser(JSON.parse(localStorage.getItem(\"user\")) || {});\r\n        if (loggedInUser.email) {\r\n            history.replace(from);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const [currentUser, setCurrentUser] = useState({\r\n        isSignedIn: false,\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    });\r\n\r\n\r\n    const handleFormToggle = () => {\r\n        setNewUser(!newUser);\r\n    };\r\n\r\n\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    /* Form validation and give error */\r\n    const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    let pass1, pass2;\r\n    const handleFormValidation = (e) => {\r\n        let isFieldValid = true;\r\n        const newError = { ...errors };\r\n\r\n        if (e.target.name === \"name\") {\r\n            isFieldValid = e.target.value.length > 2;\r\n            if (!isFieldValid) {\r\n                newError[e.target.name] = \"Name is not valid\";\r\n                setErrors(newError);\r\n            } else {\r\n                newError[e.target.name] = \"\";\r\n                setErrors(newError);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === \"email\") {\r\n            isFieldValid = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(e.target.value);\r\n            if (!isFieldValid) {\r\n                newError[e.target.name] = \"Email is not valid\";\r\n                setErrors(newError);\r\n            } else {\r\n                newError[e.target.name] = \"\";\r\n                setErrors(newError);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === \"password\" || e.target.name === \"confirmPassword\") {\r\n            const isPasswordLengthValid = e.target.value.length > 5;\r\n            const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n\r\n            isFieldValid = isPasswordLengthValid && passwordHasNumber;\r\n\r\n            if (e.target.name === \"password\") {\r\n                pass1 = e.target.value;\r\n                if (!isFieldValid) {\r\n                    newError[e.target.name] = \"Password is not valid\";\r\n                    setErrors(newError);\r\n                } else {\r\n                    newError[e.target.name] = \"\";\r\n                    setErrors(newError);\r\n                }\r\n            }\r\n            if (e.target.name === \"confirmPassword\") {\r\n                pass2 = e.target.value;\r\n                if (!isFieldValid && pass1 !== pass2) {\r\n                    newError[e.target.name] = \"Password is not matched\";\r\n                    setErrors(newError);\r\n                } else {\r\n                    newError[e.target.name] = \"\";\r\n                    setErrors(newError);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isFieldValid) {\r\n            const newUser = { ...currentUser };\r\n            newUser[e.target.name] = e.target.value;\r\n            setCurrentUser(newUser);\r\n        }\r\n    };\r\n\r\n    /* CREATE NEW USER */\r\n    const handleCreateNewUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!currentUser.email && !currentUser.password) {\r\n            const newError = { ...errors };\r\n            newError.name = \"Please use valid name!\";\r\n            newError.email = \"Please use valid email!\";\r\n            newError.password = \"Please use valid password!\";\r\n            newError.confirmPassword = \"Please is not matched!\";\r\n            setErrors(newError);\r\n        } else {\r\n            firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(currentUser.email, currentUser.password)\r\n                .then((result) => {\r\n                    const { displayName, email } = result.user;\r\n                    const newUser = {\r\n                        email: email,\r\n                        name: displayName,\r\n                        success: true,\r\n                        error: \"\",\r\n                    };\r\n                    setCurrentUser(newUser);\r\n\r\n                    setLoggedInUser(newUser);\r\n\r\n                    let admin = {};\r\n                    admin.name = currentUser.name;\r\n                    admin.email = currentUser.email.toLowerCase();\r\n\r\n                    if (result) {\r\n                        fetch('https://enigmatic-wildwood-13681.herokuapp.com/addAdminName', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify(admin)\r\n                        })\r\n                            .then(res => res.json())\r\n                            .then(success => {\r\n                                if (success) {\r\n\r\n                                }\r\n                            })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    const newUser = { ...currentUser };\r\n                    newUser.error = error.message;\r\n                    newUser.success = false;\r\n                    setLoggedInUser(newUser);\r\n                    console.log(error.message);\r\n                });\r\n        }\r\n    };\r\n\r\n    /* SIGN IN with email and password */\r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n        if (currentUser.email && currentUser.password) {\r\n            setLoading(true);\r\n        }\r\n        if (!currentUser.email && !currentUser.password) {\r\n            const newError = { ...errors };\r\n            newError.email = \"Please use valid email!\";\r\n            newError.password = \"Please use valid password!\";\r\n            setErrors(newError);\r\n            setLoading(false);\r\n        } else {\r\n            firebase\r\n                .auth()\r\n                .signInWithEmailAndPassword(currentUser.email, currentUser.password)\r\n                .then((result) => {\r\n                    if (result) {\r\n                        setLoading(false);\r\n                    }\r\n                    const { displayName, email } = result.user;\r\n                    const newUser = {\r\n                        isSignedIn: true,\r\n                        email: email,\r\n                        name: displayName,\r\n                        success: true,\r\n                        error: \"\",\r\n                    };\r\n                    setCurrentUser(newUser);\r\n                    setLoggedInUser(newUser);\r\n                    setData(newUser);\r\n\r\n                    history.replace(from);\r\n                })\r\n                .catch((error) => {\r\n                    if (error) {\r\n                        setLoading(false);\r\n                    }\r\n                    const newUser = { ...currentUser };\r\n                    newUser.email = \"\";\r\n                    newUser.error = error.message;\r\n                    newUser.success = false;\r\n                    setLoggedInUser(newUser);\r\n                });\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {\r\n                loading === true ? <img style={{ width: \"85vh\", }} className=\"rounded mx-auto d-block \" src=\"https://webstockreview.net/images/gear-clipart-setting-5.gif\" alt=\"\" />\r\n                    : <section className=\"loginPage-signup-login text-center\">\r\n                        <Link to='/'>\r\n                            <div className=\"d-flex justify-content-center mb-5\">\r\n                                <img style={{ width: '600px', marginTop: '-90px' }} src={logo} alt=\"\" />\r\n\r\n                            </div>\r\n                        </Link>\r\n                        {currentUser.success && (\r\n                            <div className=\"alert alert-success\" role=\"alert\">\r\n                                {!newUser ? \"Please login first\" : \"User registered successfully... Now wait for admin Approval...\"}\r\n                            </div>\r\n                        )}\r\n                        {loggedInUser.error && (\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {loggedInUser.error}\r\n                            </div>\r\n                        )}\r\n                        <div className=\"container\">\r\n                            {newUser ? (\r\n                                <SignUpForm\r\n                                    toggleUser={handleFormToggle}\r\n                                    validation={handleFormValidation}\r\n                                    submit={handleCreateNewUser}\r\n                                    errors={errors}\r\n                                ></SignUpForm>\r\n                            ) : (\r\n                                    <LoginForm\r\n                                        toggleUser={handleFormToggle}\r\n                                        validation={handleFormValidation}\r\n                                        submit={handleSignIn}\r\n                                        errors={errors}\r\n                                    ></LoginForm>\r\n                                )}\r\n                            <br />\r\n\r\n\r\n                        </div>\r\n                    </section>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\MakeAdmin\\MakeAdmin.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\StudentsInfo\\StudentsInfo.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Department\\Department\\Department.js",["334"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport DepartmentCard from '../DepartmentCard/DepartmentCard';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../../images/ICON/ist.png';\r\nimport { UserContext } from '../../../App';\r\nimport Unauthorized from '../../NotAccess/Unauthorized/Unauthorized';\r\nimport './Department.css';\r\n\r\n\r\nconst Department = () => {\r\n    document.title = \"Department\";\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [dept, setDept] = useState([]);\r\n\r\n    function MyComponent() {\r\n        useEffect(() => {\r\n            setDept(JSON.parse(localStorage.getItem(\"dept\")) || {});\r\n        }, [])\r\n    }\r\n\r\n    function MyComponent2() {\r\n        useEffect(() => {\r\n            fetch('https://enigmatic-wildwood-13681.herokuapp.com/departments')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data) {\r\n                        localStorage.setItem('dept', JSON.stringify(data));\r\n                    }\r\n                    setDept(data)\r\n                })\r\n        }, [])\r\n    }\r\n\r\n\r\n    if (localStorage.getItem(\"dept\")) {\r\n        MyComponent();\r\n    }\r\n    else {\r\n        MyComponent2()\r\n    }\r\n\r\n    function MyComponent3() {\r\n        useEffect(() => {\r\n            setIsAdmin(JSON.parse(localStorage.getItem(\"admin\")) || {});\r\n        }, [])\r\n    }\r\n    function MyComponent4() {\r\n        useEffect(() => {\r\n            fetch('https://enigmatic-wildwood-13681.herokuapp.com/isAdmin', {\r\n                method: 'POST',\r\n                headers: { 'content-type': 'application/json' },\r\n                body: JSON.stringify({ email: loggedInUser.email })\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    localStorage.setItem('admin', JSON.stringify(data));\r\n                    setIsAdmin(data);\r\n                });\r\n        }, [])\r\n    }\r\n    if (localStorage.getItem(\"admin\")) {\r\n        MyComponent3();\r\n    }\r\n    else {\r\n        MyComponent4();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isAdmin === true ?\r\n                    <section className=\" container\">\r\n                        <Link to='/'>\r\n                            <div className=\"d-flex justify-content-center \">\r\n                                <img style={{ width: \"200px\", height: \"200px\" }} src={logo} alt=\"\" />\r\n\r\n                            </div>\r\n                        </Link>\r\n                        <h2 className=\"text-center\">All <span className=\"text-yellow\">Department</span> </h2>\r\n                        <div class=\"department-underline mb-2\"></div>\r\n                        {\r\n                            dept.length === 0 && <img className=\"rounded mx-auto d-block mt-4 pt-3\" src=\"https://media1.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" alt=\"\" />\r\n                        }\r\n                        <div className=\"row\">\r\n\r\n                            {\r\n                                dept.map(department => <DepartmentCard key={department._id} department={department}></DepartmentCard>)\r\n                            }\r\n                        </div>\r\n                    </section>\r\n                    : <Unauthorized />\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Department;","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\NotAccess\\NoMatch\\NoMatch.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\StudentProfile\\StudentProfile.js",["335","336"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Unauthorized from '../../NotAccess/Unauthorized/Unauthorized';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport UpdateStudent from '../UpdateStudent/UpdateStudent';\r\nimport './StudentProfile.css';\r\n\r\nconst StudentProfile = () => {\r\n    const { id } = useParams();\r\n\r\n    let history = useHistory();\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [student, setStudent] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    document.title = `${id} `;\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n    useEffect(() => {\r\n        fetch(`https://enigmatic-wildwood-13681.herokuapp.com/students/${id}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                window.scrollTo(0, 0);\r\n                setStudent(data);\r\n                setLoading(false);\r\n            })\r\n    }, [id])\r\n    const handleDelete = (id) => {\r\n        fetch(`https://enigmatic-wildwood-13681.herokuapp.com/delete/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                localStorage.removeItem(\"student\");\r\n                alert('Deleted')\r\n                if (result) {\r\n                    history.goBack()\r\n                }\r\n\r\n            })\r\n    }\r\n    console.log(student);\r\n    useEffect(() => {\r\n        setIsAdmin(JSON.parse(localStorage.getItem(\"admin\")) || {});\r\n    }, [])\r\n    return (\r\n        <>\r\n            {\r\n                isAdmin === true ?\r\n                    <div>\r\n                        <Header></Header>\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"col-md-2\">\r\n                                <Sidebar></Sidebar>\r\n                            </div>\r\n                            <div style={{ backgroundColor: '#F4F7FC' }} className=\"col-md-10 pt-4 vh-100\">\r\n                                <div className=\"col-md-12\">\r\n                                    <h2 style={{ color: '#FB9937' }} className=\"text-center\">Student's Profile</h2>\r\n                                    <div class=\"profile-underline\"></div>\r\n                                    <div className=\"mt-4\">\r\n                                        {\r\n                                            student.name ? <div className=\"row pt-2 \">\r\n                                                <div className=\"col-md-5 pl-5 ml-5\">\r\n                                                    <img className=\" mx-auto d-block\" style={{ borderRadius: \"50%\" }} width=\"335\" height=\"335\" src={`data:image/png;base64,${student.image.img}`} alt=\"\" />\r\n                                                    <h2 style={{ color: '#111430' }} className=\"text-uppercase text-center mt-3\">{student.name}</h2>\r\n                                                </div>\r\n                                                <div className=\"col-md-6 mt-4\">\r\n                                                    <h3><span style={{ color: '#7BB35A' }}>Roll No:</span> {student.roll\r\n                                                    }</h3>\r\n                                                    <br />\r\n                                                    <h3><span style={{ color: '#7BB35A' }}>Session:</span> {student.session\r\n                                                    }</h3>\r\n                                                    <br />\r\n                                                    <h3><span style={{ color: '#7BB35A' }}>Department:</span> {student.department}</h3>\r\n                                                    <br />\r\n                                                    <h3><span style={{ color: '#7BB35A' }}>Email:</span> {student.email}</h3>\r\n                                                    <br />\r\n                                                    <h3><span style={{ color: '#7BB35A' }}>Contact No:</span> {student.mobile}</h3>\r\n                                                    <div className=\"row mt-4\">\r\n                                                        <button style={{ background: '#FB9937' }} onClick={openModal} className=\"m-3 btn text-white\">Update Info</button>\r\n                                                        <UpdateStudent modalIsOpen={modalIsOpen} student={student} closeModal={closeModal}></UpdateStudent>\r\n                                                        <button onClick={() => { if (window.confirm('Are You Sure?')) { handleDelete(student._id) }; }} className=\"m-3 btn btn-danger\">Delete</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                                : <img className=\"rounded mx-auto d-block \" style={{ width: '30%', height: '30%' }} src=\"https://cdn.lowgif.com/small/745b4d14b1057edd-ajax-loading-gif-11-gif-images-download.gif\" alt=\"No Image\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> : <Unauthorized />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StudentProfile;","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\AddDepartment\\AddDepartment.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\firebase.config.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\SignUpForm.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Login\\LoginForm.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\Header\\Header.js",["337","338"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../../App';\r\nimport logo from '../../../images/ICON/ist.png';\r\n\r\nconst Header = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [adminName, setAdminName] = useState([]);\r\n    useEffect(() => {\r\n        fetch('https://enigmatic-wildwood-13681.herokuapp.com/adminName', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email: loggedInUser.email })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAdminName(data[0]);\r\n            })\r\n    }, [loggedInUser.email])\r\n    return (\r\n        <div style={{ position: 'sticky', top: '0', background: 'white', zIndex: '1' }}>\r\n            <section className='d-flex'>\r\n                <div className=\"col-md-2 mt-3\">\r\n                    <Link className=\"d-flex justify-content-center align-items-center\" to=\"/\">\r\n                        <img style={{ width: \"\", height: \"90px\" }} src={logo} alt=\"\" />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-md-8 mt-3 pl-1 pt-4\">\r\n                    <h1 style={{ color: \"#7AB259\" }}>IST <span style={{ color: \"#FB9937\" }}>Student Enrollment System</span> </h1>\r\n                </div>\r\n                <div className=\"col-md-2 mt-2\">\r\n                    <div className=\"mt-5 text-right pr-4\" style={{ margin: '', color: '#7AB259' }}>\r\n                        <h6>{loggedInUser.email && <p>{JSON.parse(localStorage.getItem(\"adminName\"))}</p>}{\" \"}</h6>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Home\\Navbar\\Navbar.js",["339","340"],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\NotAccess\\Unauthorized\\Unauthorized.js",["341","342"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../../App';\r\nimport Navbar from '../../Home/Navbar/Navbar';\r\n\r\n\r\nconst Unauthorized = () => {\r\n    const [isAdmin, setIsAdmin] = useState(true);\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n\r\n    function MyComponent3() {\r\n        useEffect(() => {\r\n            setIsAdmin(JSON.parse(localStorage.getItem(\"admin\")) || {});\r\n        }, [])\r\n    }\r\n    function MyComponent4() {\r\n        useEffect(() => {\r\n            fetch('https://enigmatic-wildwood-13681.herokuapp.com/isAdmin', {\r\n                method: 'POST',\r\n                headers: { 'content-type': 'application/json' },\r\n                body: JSON.stringify({ email: loggedInUser.email })\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    localStorage.setItem('admin', JSON.stringify(data));\r\n                    setIsAdmin(data);\r\n                });\r\n        }, [])\r\n    }\r\n    if (localStorage.getItem(\"admin\")) {\r\n        MyComponent3();\r\n    }\r\n    else {\r\n        MyComponent4();\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            {\r\n                isAdmin === true ? <img style={{ width: '500px' }} className=\"rounded mx-auto d-block mt-4 pt-5\" src=\"https://media1.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" alt=\"\" />\r\n\r\n                    : <div >\r\n\r\n                        <Navbar />\r\n                        <h1 style={{ fontSize: '200px', marginTop: '70px', color: 'red' }} class=\"text-center \" >Access Denied</h1>\r\n                        <br />\r\n\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Unauthorized;","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\AllStudentsData\\AllStudentsData.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Department\\DepartmentCard\\DepartmentCard.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\Home\\HeaderMain\\HeaderMain.js",[],"G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\Sidebar\\Sidebar.js",["343"],"import { faUserPlus, faUserCog, faPlus, faUserGraduate, faCircle, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../../App';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [dept, setDept] = useState([]);\r\n    const logout = () => {\r\n        window.location.assign(\"/\");\r\n        localStorage.clear();\r\n        setLoggedInUser({})\r\n    }\r\n    function MyComponent() {\r\n        useEffect(() => {\r\n            setDept(JSON.parse(localStorage.getItem(\"dept\")) || {});\r\n        }, [])\r\n    }\r\n\r\n    function MyComponent2() {\r\n        useEffect(() => {\r\n            fetch('https://enigmatic-wildwood-13681.herokuapp.com/departments')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data) {\r\n                        localStorage.setItem('dept', JSON.stringify(data));\r\n                    }\r\n                    setDept(data)\r\n                })\r\n        }, [])\r\n    }\r\n\r\n\r\n    if (localStorage.getItem(\"dept\")) {\r\n        MyComponent();\r\n    }\r\n    else {\r\n        MyComponent2()\r\n    }\r\n    return (\r\n        <div className=\"sidebar d-flex flex-column justify-content-between align-items-center col-md-2 py-5 px-4\" style={{ height: \"100vh\" }}>\r\n\r\n            <ul className=\"list-unstyled py-3\">\r\n                <li>\r\n                    <Link onClick={() => { window.location.href = \"/student/allstudent\" }} style={{ textDecoration: 'none' }} to=\"/student/allstudent\" className=\"\">\r\n                        <span><FontAwesomeIcon icon={faUserGraduate} /> All Student</span>\r\n                    </Link>\r\n                    <div className=\"\">\r\n\r\n                        <li className=\"subMenu\">\r\n                            {\r\n                                dept.length === 0 && <p>Loading...</p>\r\n                            }\r\n\r\n                            {\r\n\r\n                                dept.map(department => <Link onClick={() => { window.location.href = `/students/allstudent/${department.department}` }} style={{ textDecoration: 'none' }} key={department._id} to={`/students/allstudent/${department.department}`} className=\"subMenu\">\r\n                                    <small style={{ display: \"block\", marginBottom: \"2px\" }}><FontAwesomeIcon icon={faCircle} />{department.department}</small>\r\n                                </Link>)\r\n                            }\r\n                        </li>\r\n                    </div>\r\n                </li>\r\n\r\n\r\n                <li>\r\n                    <Link onClick={() => { window.location.href = \"/students/enrollment\" }} style={{ textDecoration: 'none' }} to=\"/students/enrollment\" className=\"\">\r\n                        <span><FontAwesomeIcon icon={faUserPlus} /> Enroll A Student</span>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link onClick={() => { window.location.href = \"/students/department\" }} style={{ textDecoration: 'none' }} to=\"/students/department\" className=\"\">\r\n                        <span><FontAwesomeIcon icon={faPlus} /> Add Department</span>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link onClick={() => { window.location.href = \"/students/admin\" }} style={{ textDecoration: 'none' }} to=\"/students/admin\" className=\"\">\r\n                        <span> <FontAwesomeIcon icon={faUserCog} /> Make Admin</span>\r\n                    </Link>\r\n                </li>\r\n                <button to='/' onClick={logout} className=\"fixed-bottom ml-3 btn-danger mb-3 btn btn-sm\">Log Out  <FontAwesomeIcon icon={faSignOutAlt} /></button>\r\n            </ul>\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Sidebar;","G:\\Varsity-Project\\student-enrollment-system\\client\\src\\components\\StudentsInfo\\UpdateStudent\\UpdateStudent.js",["344"],"D:\\Study\\varsity project\\Exam management system\\client\\src\\index.js",[],["345","346"],"D:\\Study\\varsity project\\Exam management system\\client\\src\\reportWebVitals.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\App.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\PrivateRoute.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\StudentsInfo\\StudentsInfo.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\EnrollStudent\\EnrollStudent.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\StudentByDepartment\\StudentByDepartment.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\NotAccess\\NoMatch\\NoMatch.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\Login.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Home\\Home\\Home.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\MakeAdmin\\MakeAdmin.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\StudentProfile\\StudentProfile.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AddDepartment\\AddDepartment.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Department\\Department\\Department.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\firebase.config.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\SignUpForm.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Login\\LoginForm.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AllStudentsData\\AllStudentsData.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\NotAccess\\Unauthorized\\Unauthorized.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\Sidebar\\Sidebar.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\Header\\Header.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Home\\HeaderMain\\HeaderMain.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Home\\Navbar\\Navbar.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Department\\DepartmentCard\\DepartmentCard.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\UpdateStudent\\UpdateStudent.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AddSession\\AddSession.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AddTeacher\\AddTeacher.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AddSemester\\AddSemester.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\TeacherList\\TeacherList.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Semester\\Semester.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\SemesterDashboard\\SemesterDashboard.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\TeacherSidebar\\TeacherSidebar.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\TeacherHeader\\TeacherHeader.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\CreateExam.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\Practice\\Practice.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\McqCategory.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\FillInTheBlanks.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\WrittenExam.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\QuestionList\\QuestionList.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\QuestionProfile\\QuestionProfile.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AllSemester\\AllSemester.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\SemesterDetails\\SemesterDetails.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\UpdateSemester\\UpdateSemester.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\DepartmentList\\DepartmentList.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\AdminList\\AdminList.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\UpdateQuestionDetails\\UpdateQuestionDetails.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\TeacherProfile\\TeacherProfile.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Admin\\UpdateTeacher\\UpdateTeacher.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\StudentDashboard\\StudentDashboard.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\StudentHeader\\StudentHeader.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\StudentSidebar\\StudentSidebar.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\Exam\\Exam.js",[],"D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Student\\ExamPage\\ExamPage.js",["347"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n// import { useForm } from 'react-hook-form';\r\nimport Unauthorized from '../../NotAccess/Unauthorized/Unauthorized';\r\nimport StudentHeader from '../StudentHeader/StudentHeader';\r\nimport StudentSidebar from '../StudentSidebar/StudentSidebar';\r\nimport timesUp from '../../../images/ICON/timesUp.png'\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nconst Countdown = ({ time, duration }) => {\r\n    // const [countdownDate] = useState((new Date(time).getTime() + duration * 60000));\r\n    const [state, setState] = useState({\r\n        days: 0,\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        // setNewTime()\r\n        // setInterval(() => {\r\n        //     setNewTime()\r\n        //     // if(state.seconds === 0 ){\r\n        //     //     window.location.assign('/')\r\n        //     // }\r\n        //     console.log(state.seconds)\r\n        // }, 10);\r\n        let timeData = new Date(new Date(time).getTime() + duration * 60000) - new Date().getTime();\r\n        console.log(parseInt(timeData / 1000))\r\n        let filterTime = (parseInt(timeData / 1000)) * 1000;\r\n        console.log(!isNaN(filterTime))\r\n        // function stop(){\r\n        //     clearInterval(intervalID);\r\n        // }\r\n        var refreshIntervalId = setInterval(() => {\r\n            setNewTime()\r\n            // if(state.seconds === 0 ){\r\n            //     window.location.assign('/')\r\n            // }\r\n            // console.log(state.seconds)\r\n        }, 10)\r\n        if (!isNaN(filterTime)) {\r\n\r\n            setInterval(() => {\r\n                clearInterval(refreshIntervalId)\r\n                // window.location.reload('/exam')\r\n            }, filterTime);\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [time, duration]);\r\n\r\n    const setNewTime = () => {\r\n        if (new Date(time).getTime() + duration * 60000) {\r\n            const currentTime = new Date().getTime();\r\n\r\n            const distanceToDate = new Date(time).getTime() + duration * 60000 - currentTime;\r\n\r\n            let days = Math.floor(distanceToDate / (1000 * 60 * 60 * 24));\r\n            let hours = Math.floor(\r\n                (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n            );\r\n            let minutes = Math.floor(\r\n                (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\r\n            );\r\n            let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n\r\n            const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n            days = `${days}`;\r\n            if (numbersToAddZeroTo.includes(hours)) {\r\n                hours = `0${hours}`;\r\n            } else if (numbersToAddZeroTo.includes(minutes)) {\r\n                minutes = `0${minutes}`;\r\n            } else if (numbersToAddZeroTo.includes(seconds)) {\r\n                seconds = `0${seconds}`;\r\n            }\r\n\r\n            setState({ days: days, hours: hours, minutes, seconds });\r\n        }\r\n    };\r\n    return (<div className='countdown-wrapper'>\r\n\r\n        <div className='time-section'>\r\n            <div className='time'>{state.hours || '00'}</div>\r\n            <small className=\"time-text\">Hours</small>\r\n        </div>\r\n        <div className='time-section'>\r\n            <div className='time'>:</div>\r\n        </div>\r\n        <div className='time-section'>\r\n            <div className='time'>{state.minutes || '00'}</div>\r\n            <small className=\"time-text\">Minutes</small>\r\n        </div>\r\n        <div className='time-section'>\r\n            <div className='time'>:</div>\r\n        </div>\r\n        <div className='time-section'>\r\n            <div className='time'>{state.seconds || '00'}</div>\r\n            <small className=\"time-text\">Seconds</small>\r\n        </div>\r\n    </div>)\r\n}\r\n// drag drop file component\r\nfunction DragDropFile({handleFunction,question}) {\r\n    // drag state\r\n    const [file, setFile] = useState([])\r\n    function handleFile(files) {\r\n        console.log(files[0])\r\n        setFile([files[0]])\r\n        console.log(files[0].name)\r\n        // index,question, mark, number, category, ans\r\n        handleFunction(0, question.assignmentDetails, question.mark, 1, \"File Submission\", files[0])\r\n        // alert(\"Number of files: \" + files);\r\n    }\r\n    \r\n    console.log(file)\r\n    useEffect(()=>{\r\n        // \r\n    },[file])\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    // ref\r\n    const inputRef = React.useRef(null);\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            handleFile(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e) {\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            handleFile(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = (e) => {\r\n        inputRef.current.click();\r\n        e.preventDefault()\r\n    };\r\n\r\n    return (\r\n        <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n            <input ref={inputRef} type=\"file\" id=\"input-file-upload\" multiple={true} onChange={handleChange} />\r\n            <label id=\"label-file-upload\" htmlFor=\"input-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                {file.length > 0 ? <>\r\n                    <div>\r\n                        <p>{file[0].name}</p>\r\n                    </div>\r\n\r\n                </> : <div>\r\n                    <p>Drag and drop your file here or</p>\r\n                    <button className=\"upload-button\" onClick={onButtonClick}>Upload a file</button>\r\n                </div>}\r\n            </label>\r\n            {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ExamPage = () => {\r\n    const [student, setStudent] = useState([]);\r\n    const [answer, setAnswer] = useState([]);\r\n    // const [semester, setSemester] = useState({});\r\n    const [isStudent, setIsStudent] = useState(false);\r\n    // const [student, setStudent] = useState([]);\r\n    const [result, setResult] = useState(false);\r\n    const [category, setCategory] = useState('')\r\n    // const [resultCount, setResultCount] = useState(\"\");\r\n    const [question, setQuestion] = useState([]);\r\n    const [questionData, setQuestionData] = useState({});\r\n    // const [answer, setAnswer] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [timeUp, setTimeUp] = useState(false);\r\n    const { id } = useParams();\r\n    console.log(id)\r\n\r\n    document.title = \"Exam Page\";\r\n\r\n    useEffect(() => {\r\n        setStudent(JSON.parse(localStorage.getItem(\"studentData\")) || {});\r\n        setIsStudent(JSON.parse(localStorage.getItem(\"studentAccess\")) || {});\r\n        // setSemester(JSON.parse(localStorage.getItem(\"semesterData\"))[0] || {});\r\n        fetch(`http://localhost:5000/questionFind/${id}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res)\r\n\r\n                // setLoading(false)\r\n                if (res.validation === true) {\r\n                    setLoading(false)\r\n                    setQuestionData(res.question);\r\n                    setCategory(res.question.category);\r\n                    setQuestion(shuffle(res.question.question));\r\n                }\r\n                else {\r\n                    setLoading(false)\r\n                    setTimeUp(true)\r\n                }\r\n                // const filterMcq = res.question.question.filter(data => data.category === 'mcq')\r\n                // console.log(filterMcq)\r\n                // let answer = [];\r\n                // filterMcq.map(el=>{\r\n                //     answer.push([el.answer1,])\r\n                // })\r\n\r\n            })\r\n\r\n\r\n\r\n    }, [id])\r\n    useEffect(() => {\r\n\r\n        let time = new Date(new Date(questionData.time).getTime() + questionData.duration * 60000) - new Date().getTime();\r\n        console.log(parseInt(time / 1000))\r\n        let filterTime = (parseInt(time / 1000)) * 1000;\r\n        console.log(!isNaN(filterTime))\r\n        if (!isNaN(filterTime)) {\r\n            setInterval(() => {\r\n                window.location.assign(`/examPage/${questionData._id}`)\r\n            }, filterTime);\r\n        }\r\n\r\n\r\n        // setInterval(() => {\r\n        //     window.location.assign('/exam')\r\n        //     // if(state.seconds === 0 ){\r\n        //     //     window.location.assign('/')\r\n        //     // }\r\n        //     // console.log(state.seconds)\r\n        // }, Math.round(new Date(new Date(questionData.time).getTime() + questionData.duration * 60000)- new Date().getTime() / 1000));\r\n    }, [questionData.time, questionData.duration, questionData._id])\r\n\r\n    const handleChange = (index,question, mark, number, category, ans) => {\r\n        console.log({\r\n            index: index,\r\n            questionNumber: number,\r\n            questionCategory: category,\r\n            answer: ans\r\n        })\r\n        let data = {\r\n            index: index + 1,\r\n            questionName: question,\r\n            mark: parseInt(mark),\r\n            questionNumber: number,\r\n            category: category,\r\n            answer: ans\r\n        }\r\n        if (answer.find(ans => ans.index === index + 1) === undefined) {\r\n            const previousAnswer = [...answer, data]\r\n            setAnswer(previousAnswer)\r\n        }\r\n        else {\r\n            let newAns = answer.filter(ans => ans.index !== index + 1)\r\n            const previousAnswer = [...newAns, data]\r\n            setAnswer(previousAnswer)\r\n        }\r\n        // const findQues = question.filter(question => question.data.question === ques)\r\n        // // console.log(findQues)\r\n        // let data = {}\r\n        // if (findQues[0].data.rightAnswer === ans) {\r\n        //     data.question = ques;\r\n        //     data.answer = 'Right'\r\n        // }\r\n        // else if (findQues[0].data.rightAnswer !== ans) {\r\n        //     data.question = ques;\r\n        //     data.answer = 'Wrong'\r\n        // }\r\n        // //    console.log(sameQues)\r\n        // if (answer.find(ans => ans.question === ques) === undefined) {\r\n        //     const previousAnswer = [...answer, data]\r\n        //     setAnswer(previousAnswer)\r\n        // }\r\n        // else {\r\n        //     let newAns = answer.filter(ans => ans.question !== ques)\r\n        //     const previousAnswer = [...newAns, data]\r\n        //     setAnswer(previousAnswer)\r\n        // }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        // console.log(answer)\r\n        // const result = answer.filter(ans => ans.answer === 'Right')\r\n        // alert(`Your result is ${result.length}/${question.length}`)\r\n        // window.location.assign('/')\r\n        // setResultCount(result.length)\r\n        // setResult(true)\r\n        console.log(answer,questionData,student)\r\n\r\n    }\r\n    function shuffle(array) {\r\n        let currentIndex = array.length, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (currentIndex !== 0) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n\r\n            // And swap it with the current element.\r\n            [array[currentIndex], array[randomIndex]] = [\r\n                array[randomIndex], array[currentIndex]];\r\n        }\r\n\r\n        return array;\r\n    }\r\n    console.log(category, question)\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n    return (\r\n        <div >\r\n            <>\r\n                {\r\n                    isStudent === true ?\r\n                        <div>\r\n                            <StudentHeader></StudentHeader>\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"col-md-2\">\r\n                                    <StudentSidebar></StudentSidebar>\r\n                                </div>\r\n                                <div style={{ backgroundColor: '#F4F7FC', minHeight: '87vh', height: 'auto', width: '100%' }} className=\" pt-3\">\r\n                                    {loading && <h2 className='text-center mt-5 text-warning'>Loading...</h2>}\r\n\r\n                                    {timeUp && <div className='text-center mt-5 '><img src={timesUp} alt=\"\" /></div>}\r\n                                    {\r\n                                        question.length > 0 && <Countdown time={questionData?.time} duration={questionData?.duration} />}\r\n\r\n                                    <div style={{ position: 'relative', top: '5px' }} className=\" \">\r\n\r\n                                        {/* <div className=\"semester-header\"><h2>Exam Page</h2></div> */}\r\n                                        {\r\n                                            question.length > 0 && <div className='text-center mt-5'>\r\n                                                <h3 className='text-success'>{questionData.examName}</h3>\r\n                                                {/* <h5><span className=\"text-warning\">Date:</span> {questionData?.time?.split('T')[0]}</h5> */}\r\n                                                {/* <h5><span className=\"text-warning\">Start Time:</span> {questionData?.time?.split('T')[1]?.split(':')[0] > 12 ? (`${questionData?.time?.split('T')[1]?.split(':')[0] - 12}:${questionData?.time?.split('T')[1]?.split(':')[1]}`) : (questionData?.time?.split('T')[1])} {questionData?.time?.split('T')[1]?.split(':')[0] > 12 ? 'PM' : 'AM'}</h5> */}\r\n\r\n                                                <h5><span className=\"text-warning\">End Time:</span>  {new Date(new Date(questionData?.time).getTime() + questionData?.duration * 60000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</h5>\r\n                                                <h5><span className=\"text-warning\">Duration:</span> {questionData?.duration} Min</h5>\r\n                                                <h5><span className=\"text-warning\">Total Mark:</span> {question?.map((data, index) => parseInt(data.mark)).reduce((partialSum, a) => partialSum + a, 0)}</h5>\r\n                                                {questionData?.category === 'mcq' || questionData?.category === 'written' ? <>\r\n                                                    <h5><span className=\"text-warning\">Total Question:</span> {questionData.totalQuestion} </h5>\r\n                                                </> : <></>}\r\n                                            </div>\r\n                                        }\r\n\r\n                                        {\r\n                                            category === 'mcq' && <div style={{ marginBottom: '100px', display: result ? 'none' : 'flex' }} className=\"container pb-3  justify-content-center\">\r\n                                                <div style={{ width: '800px' }} className=\"text-center \">\r\n                                                    <Carousel style={{ marginBottom: '-20px', marginTop: '-10px' }} indicators={false} interval={null} variant=\"dark\" fade={true} activeIndex={index} onSelect={handleSelect}>\r\n\r\n                                                        {\r\n                                                            question?.map((question, index) =>\r\n                                                                <Carousel.Item style={{ padding: ' 40px 90px 10px 90px' }} >\r\n                                                                    <div className=''>\r\n                                                                        <form action=\"#\" method=\"post\" style={{ fontSize: '20px', border: '1px solid white', padding: '40px', width: '100%', borderRadius: '10px', boxShadow: '5px 5px 20px gray', marginBottom: '50px' }}>\r\n                                                                            <fieldset >\r\n                                                                                <p className=\"font-weight-bold text-primary\">Ques no: <span>{index + 1}</span> <br /> <span style={{ userSelect: 'none' }} className=\"text-danger\">{question.questionName}</span></p>\r\n                                                                                <p style={{ marginTop: '-12px' }} className='text-success'>Mark: <span>{question.mark}</span></p>\r\n                                                                                {question.category === 'mcq' ? <>{\r\n                                                                                    [{ answer: question.answer1, value: 'answer1' }, { answer: question.answer2, value: 'answer2' }, { answer: question.answer3, value: 'answer3' }, { answer: question.answer4, value: 'answer4' }].map(answer => <>\r\n                                                                                        <div style={{ lineHeight: '0.5' }}>\r\n                                                                                            <label className=\"rad-label\">\r\n                                                                                                <input\r\n                                                                                                    onBlur={() => handleChange(index, question.questionName, question.mark, question.questionNumber, question.category, answer.value)}\r\n                                                                                                    type=\"radio\" className=\"rad-input\" name=\"rad\" />\r\n                                                                                                <div className=\"rad-design\" />\r\n                                                                                                <div style={{ userSelect: 'none' }} className=\"rad-text\">{answer.answer}</div>\r\n                                                                                            </label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                                                                        </div></>)\r\n                                                                                }\r\n\r\n                                                                                </> : question.category === 'fillInTheGaps' ? <>\r\n                                                                                    <label >\r\n                                                                                        <textArea\r\n                                                                                            onBlur={(e) => handleChange(index, question.questionName, question.mark, question.questionNumber, question.category, e.target.value)}\r\n                                                                                            style={{ width: '400px' }}\r\n                                                                                            type=\"text\" className=\"form-control\" />\r\n\r\n                                                                                    </label>\r\n                                                                                </> : <></>}\r\n\r\n\r\n                                                                            </fieldset>\r\n                                                                        </form>\r\n\r\n\r\n                                                                    </div>\r\n                                                                </Carousel.Item>\r\n                                                            )\r\n\r\n                                                        }\r\n\r\n\r\n\r\n\r\n                                                    </Carousel>\r\n\r\n\r\n                                                    {/* <input type=\"Submit\" defaultValue=\"Proceed\" /> */}\r\n                                                    {\r\n                                                        question.length === 0 ? <div className=\"text-center text-primary\"><h2>Loading...</h2></div> : <button style={{ fontSize: '20px' }} onClick={() => handleSubmit()} className=\"btn btn-success font-weight-bold px-5\">Submit</button>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            category === 'assignment' && question.length > 0 && <><div style={{ marginBottom: '100px', display: result ? 'none' : 'flex' }} className=\"container py-3  justify-content-center\">\r\n                                                <div className=\"text-center w-50\">\r\n\r\n                                                    <form action=\"#\" method=\"post\" style={{ fontSize: '20px', border: '1px solid white', padding: '40px', width: '100%', borderRadius: '10px', boxShadow: '5px 5px 20px gray', marginBottom: '50px' }}>\r\n                                                        <fieldset >\r\n                                                            <p className=\"font-weight-bold mb-4\"><span style={{ userSelect: 'none' }} className=\"text-danger\">{question[0].assignmentDetails}</span></p>\r\n\r\n                                                            {\r\n                                                                question[0].assignmentCategory === 'File Submission' ? <>\r\n                                                                    <div className='d-flex justify-content-center'>\r\n                                                                    <DragDropFile handleFunction={handleChange} question={question[0]}/>\r\n                                                                    </div>\r\n                                                                </> : <>\r\n\r\n                                                                    <label >\r\n                                                                        <textArea\r\n                                                                            // onChange={(e) => handleChange(question.questionNumber,question.category, e.target.value)} \r\n                                                                            style={{ width: '400px' }}\r\n                                                                            placeholder=\"Enter Link Here\"\r\n                                                                            type=\"text\" className=\"form-control\" />\r\n\r\n                                                                    </label>\r\n                                                                </>\r\n                                                            }\r\n\r\n\r\n                                                        </fieldset>\r\n                                                    </form>\r\n\r\n\r\n                                                    {/* <input type=\"Submit\" defaultValue=\"Proceed\" /> */}\r\n                                                    {\r\n                                                        question.length === 0 ? <div className=\"text-center text-primary\"><h2>Loading...</h2></div> : <button style={{ fontSize: '20px' }} onClick={() => handleSubmit()} className=\"btn btn-success font-weight-bold px-5\">Submit</button>\r\n                                                    }\r\n                                                </div>\r\n                                            </div></>\r\n                                        }\r\n\r\n\r\n                                        {\r\n                                            category === 'viva' && question.length > 0 && <><div style={{ marginBottom: '100px', display: result ? 'none' : 'flex' }} className=\"container py-3  justify-content-center\">\r\n                                                <div className=\"text-center w-50\">\r\n                                                    <form action=\"#\" method=\"post\" style={{ fontSize: '20px', border: '1px solid white', padding: '40px', width: '100%', borderRadius: '10px', boxShadow: '5px 5px 20px gray', marginBottom: '50px' }}>\r\n                                                        <fieldset >\r\n                                                            <p className=\"font-weight-bold mb-4\"><span style={{ userSelect: 'none' }} className=\"text-danger\">{question[0].vivaDetails}</span></p>\r\n                                                            <p className=\"font-weight-bold mb-4\">Attendance Link : <span style={{ userSelect: 'none' }} className=\"text-primary\"><a target=\"blank\" href={`//${question[0]?.attendanceLink}`}>{question[0]?.attendanceLink}</a></span></p>\r\n                                                        </fieldset>\r\n                                                    </form>\r\n                                                    <br />\r\n                                                </div>\r\n                                            </div></>\r\n                                        }\r\n                                        {\r\n                                            category === 'written' && <div style={{ marginBottom: '100px', display: result ? 'none' : 'flex' }} className=\"container pb-3  justify-content-center\">\r\n                                                <div style={{ width: '800px' }} className=\"text-center \">\r\n                                                    <Carousel style={{ marginBottom: '-20px', marginTop: '-10px' }} indicators={false} interval={null} variant=\"dark\" fade={true} activeIndex={index} onSelect={handleSelect}>\r\n                                                        {\r\n                                                            question?.map((question, index) =>\r\n                                                                <Carousel.Item style={{ padding: ' 40px 90px 10px 90px' }} >\r\n                                                                    <div className=''>\r\n                                                                        <form action=\"#\" method=\"post\" style={{ fontSize: '20px', border: '1px solid white', padding: '40px', width: '100%', borderRadius: '10px', boxShadow: '5px 5px 20px gray', marginBottom: '50px' }}>\r\n                                                                            <fieldset >\r\n                                                                                <p style={{ marginTop: '-20px' }} className=\"font-weight-bold text-primary\">Ques no: <span>{index + 1}</span> <br /> <span style={{ userSelect: 'none' }} className=\"text-danger\">{question.questionName}</span></p>\r\n                                                                                <p style={{ marginTop: '-12px' }} className='text-success'>Mark: <span>{question.mark}</span></p>\r\n                                                                                <label >\r\n                                                                                    <textArea\r\n                                                                                        onBlur={(e) => handleChange(index, question.questionName, question.mark, question.questionNumber, question.category, e.target.value)}\r\n                                                                                        style={{ width: '400px', marginBottom: '-15px', height: '200px' }}\r\n                                                                                        type=\"text\" className=\"form-control\" />\r\n\r\n                                                                                </label>\r\n\r\n\r\n\r\n                                                                            </fieldset>\r\n                                                                        </form>\r\n\r\n                                                                    </div>\r\n                                                                </Carousel.Item>\r\n                                                            )\r\n\r\n                                                        }\r\n                                                    </Carousel>\r\n\r\n\r\n                                                    {/* <input type=\"Submit\" defaultValue=\"Proceed\" /> */}\r\n                                                    {\r\n                                                        question.length === 0 ? <div className=\"text-center text-primary\"><h2>Loading...</h2></div> : <button style={{ fontSize: '20px' }} onClick={() => handleSubmit()} className=\"btn btn-success font-weight-bold px-5\">Submit</button>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div> : <Unauthorized />\r\n                }\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExamPage;","D:\\Study\\varsity project\\Exam management system\\client\\src\\components\\Teacher\\CreateExam\\UpdateQuestion.js",[],{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","severity":1,"message":"353","line":6,"column":26,"nodeType":"354","messageId":"355","endLine":6,"endColumn":41},{"ruleId":"356","severity":1,"message":"357","line":32,"column":8,"nodeType":"358","endLine":32,"endColumn":10,"suggestions":"359"},{"ruleId":"352","severity":1,"message":"353","line":12,"column":26,"nodeType":"354","messageId":"355","endLine":12,"endColumn":41},{"ruleId":"352","severity":1,"message":"360","line":15,"column":12,"nodeType":"354","messageId":"355","endLine":15,"endColumn":19},{"ruleId":"361","severity":1,"message":"362","line":93,"column":51,"nodeType":"363","endLine":93,"endColumn":246},{"ruleId":"352","severity":1,"message":"353","line":7,"column":26,"nodeType":"354","messageId":"355","endLine":7,"endColumn":41},{"ruleId":"352","severity":1,"message":"364","line":8,"column":12,"nodeType":"354","messageId":"355","endLine":8,"endColumn":21},{"ruleId":"352","severity":1,"message":"365","line":1,"column":29,"nodeType":"354","messageId":"355","endLine":1,"endColumn":38},{"ruleId":"366","severity":1,"message":"367","line":65,"column":137,"nodeType":"368","endLine":65,"endColumn":178},{"ruleId":"352","severity":1,"message":"369","line":2,"column":10,"nodeType":"354","messageId":"355","endLine":2,"endColumn":14},{"ruleId":"352","severity":1,"message":"353","line":9,"column":26,"nodeType":"354","messageId":"355","endLine":9,"endColumn":41},{"ruleId":"352","severity":1,"message":"370","line":9,"column":12,"nodeType":"354","messageId":"355","endLine":9,"endColumn":24},{"ruleId":"352","severity":1,"message":"371","line":19,"column":9,"nodeType":"354","messageId":"355","endLine":19,"endColumn":16},{"ruleId":"348","replacedBy":"372"},{"ruleId":"350","replacedBy":"373"},{"ruleId":"352","severity":1,"message":"374","line":184,"column":20,"nodeType":"354","messageId":"355","endLine":184,"endColumn":29},"no-native-reassign",["375"],"no-negated-in-lhs",["376"],"no-unused-vars","'setLoggedInUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'from', 'history', 'loggedInUser.email', and 'setLoggedInUser'. Either include them or remove the dependency array.","ArrayExpression",["377"],"'loading' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'adminName' is assigned a value but never used.","'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","'loggedInUser' is assigned a value but never used.","'history' is assigned a value but never used.",["375"],["376"],"'setResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"378","fix":"379"},"Update the dependencies array to be: [from, history, loggedInUser.email, setLoggedInUser]",{"range":"380","text":"381"},[1113,1115],"[from, history, loggedInUser.email, setLoggedInUser]"]